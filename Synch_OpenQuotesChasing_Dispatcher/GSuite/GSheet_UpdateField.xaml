<Activity mc:Ignorable="sap sap2010" x:Class="GSheet_UpdateStatus" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ug="clr-namespace:UiPath.GSuite;assembly=UiPath.GSuite" xmlns:uga="clr-namespace:UiPath.GSuite.Activities;assembly=UiPath.GSuite.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_FieldValue" Type="InArgument(x:String)" />
    <x:Property Name="in_RemoveReadyToProcess" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_UiPathId" Type="InArgument(x:String)" />
    <x:Property Name="in_Column" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1373.6,3779.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GSheet_UpdateStatus_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="40">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.GSuite</x:String>
      <x:String>UiPath.GSuite.Contracts</x:String>
      <x:String>UiPath.GSuite.Activities.Enums</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.GSuite.Activities.Sheets</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.GSuite.Activities.Contracts</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPathTeam.MSExcel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="70">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPathTeam.MSExcel.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GSheet_UpdateStatus" sap:VirtualizedContainerService.HintSize="1153.6,3714.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="IncomeTrkDT" />
      <Variable x:TypeArguments="x:Int32" Name="OriginalRowIndex" />
      <Variable x:TypeArguments="x:String" Name="NewValue" />
      <Variable x:TypeArguments="x:String" Name="CurrentFieldValue" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1112,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Update started with value: &quot;+in_FieldValue+&quot;, on column: &quot;+in_Column+&quot;, for UiPath Id: &quot;+in_UiPathId+&quot;...&quot;]" />
    <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="1112,3488.8" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:10">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1070.4,3312.8" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <uga:GSuiteApplicationScope Account="{x:Null}" ApiKey="{x:Null}" ContinueOnError="{x:Null}" CredentialID="{x:Null}" CredentialSecret="{x:Null}" Folder="{x:Null}" Password="{x:Null}" SecureCredentialSecret="{x:Null}" TimeoutMS="{x:Null}" UserEmail="{x:Null}" AuthenticationType="ServiceAccountKey" DataStoreLocation="Local disk" DisplayName="GSuite Application Scope 'Synch Income Tracking - UiPath Queue'" HasDomainWideAccesss="False" sap:VirtualizedContainerService.HintSize="1033.6,3081.6" sap2010:WorkflowViewState.IdRef="GSuiteApplicationScope_3" KeyPath="[in_Config(&quot;GSuiteJson_Path&quot;).ToString]" KeyType="JSON" OAuthClient="UiPath" ServiceAccountEmail="[in_Config(&quot;GSuite_ServiceAccountEmail&quot;).ToString]" Services="Unselected">
                <uga:GSuiteApplicationScope.AuthenticationScopes>
                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="8">
                    <InArgument x:TypeArguments="x:String">https://www.googleapis.com/auth/spreadsheets</InArgument>
                  </scg:List>
                </uga:GSuiteApplicationScope.AuthenticationScopes>
                <uga:GSuiteApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ug:SimpleObjectContainer">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ug:SimpleObjectContainer" Name="GSuiteScope" />
                    </ActivityAction.Argument>
                    <Sequence sap:VirtualizedContainerService.HintSize="1000,2969.6" sap2010:WorkflowViewState.IdRef="Sequence_5">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="TimestampColumnLetter" />
                        <Variable x:TypeArguments="x:String" Name="ColumnToUpdateLetter" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <uga:ReadRange ContinueOnError="{x:Null}" GoogleSpreadsheet="{x:Null}" Range="{x:Null}" AuthScopesInvalid="False" DisplayName="Read Range IncomeTrk_GLog_SheetID" sap:VirtualizedContainerService.HintSize="958.4,213.6" sap2010:WorkflowViewState.IdRef="ReadRange_3" IncludeHeaders="True" Result="[IncomeTrkDT]" SheetName="[in_Config(&quot;IncomeTrk_GQueue_SheetName&quot;).ToString]" SpreadsheetId="[in_Config(&quot;IncomeTrk_GLog_SheetID&quot;).ToString]" />
                      <Assign DisplayName="Assign OriginalRowIndex" sap:VirtualizedContainerService.HintSize="958.4,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[OriginalRowIndex]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[IncomeTrkDT.Rows.IndexOf(IncomeTrkDT.AsEnumerable.Where(Function(row) in_UiPathId.Contains(row("UiPath ID").ToString) And not string.IsNullOrEmpty(row("UiPath ID").ToString)).First)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:GetColumnLetter ColumnLetter="[TimestampColumnLetter]" ColumnName="Timestamp" DataTable="[IncomeTrkDT]" DisplayName="Get TimestampColumnLetter" sap:VirtualizedContainerService.HintSize="958.4,134.4" sap2010:WorkflowViewState.IdRef="GetColumnLetter_1" />
                      <uga:WriteCell ContinueOnError="{x:Null}" GoogleSpreadsheet="{x:Null}" Request="{x:Null}" AuthScopesInvalid="False" Cell="[TimestampColumnLetter+(OriginalRowIndex+2).tostring]" DisplayName="Write Cell Timestamp" sap:VirtualizedContainerService.HintSize="958.4,192.8" sap2010:WorkflowViewState.IdRef="WriteCell_5" IsInsideBatchUpdateScope="False" SheetName="[in_Config(&quot;IncomeTrk_GQueue_SheetName&quot;).ToString]" SpreadsheetId="[in_Config(&quot;IncomeTrk_GLog_SheetID&quot;).ToString]" Value="[now.ToString]" />
                      <ui:GetColumnLetter ColumnLetter="[ColumnToUpdateLetter]" ColumnName="[in_Column]" DataTable="[IncomeTrkDT]" DisplayName="Get ColumnToUpdateLetter" sap:VirtualizedContainerService.HintSize="958.4,134.4" sap2010:WorkflowViewState.IdRef="GetColumnLetter_2" />
                      <If Condition="[not in_Column=&quot;Foreground&quot;]" DisplayName="If not in_Column=&quot;Foreground&quot;" sap:VirtualizedContainerService.HintSize="958.4,887.2" sap2010:WorkflowViewState.IdRef="If_4">
                        <If.Then>
                          <Sequence DisplayName="Not Foreground column update" sap:VirtualizedContainerService.HintSize="652,728" sap2010:WorkflowViewState.IdRef="Sequence_9">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <uga:ReadCell CellValue="{x:Null}" ContinueOnError="{x:Null}" GoogleSpreadsheet="{x:Null}" AuthScopesInvalid="False" Cell="[ColumnToUpdateLetter+(OriginalRowIndex+2).tostring]" DisplayName="Read Cell field" sap:VirtualizedContainerService.HintSize="610.4,183.2" sap2010:WorkflowViewState.IdRef="ReadCell_3" SheetName="[in_Config(&quot;IncomeTrk_GQueue_SheetName&quot;).ToString]" SpreadsheetId="[in_Config(&quot;IncomeTrk_GLog_SheetID&quot;).ToString]">
                              <uga:ReadCell.CellValueGeneric>
                                <OutArgument x:TypeArguments="x:String">[CurrentFieldValue]</OutArgument>
                              </uga:ReadCell.CellValueGeneric>
                            </uga:ReadCell>
                            <If Condition="[in_Column=&quot;Comments&quot;]" DisplayName="If update is for status" sap:VirtualizedContainerService.HintSize="610.4,412" sap2010:WorkflowViewState.IdRef="If_2">
                              <If.Then>
                                <Sequence DisplayName="Status update" sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assign NewValue" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[NewValue]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[if(Not String.IsNullOrEmpty(CurrentFieldValue), in_FieldValue+"; "+CurrentFieldValue, in_FieldValue)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign NewValue for Failed comments" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[NewValue]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[if(in_FieldValue.Contains("Failed"), (Regex.Matches(NewValue,"Failed").Count).ToString+" "+NewValue, NewValue)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Assign DisplayName="Assign NewValue" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[NewValue]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[if(Not String.IsNullOrEmpty(CurrentFieldValue), if(not CurrentFieldValue.ToLower.Trim.Contains(in_FieldValue.ToLower.Trim), CurrentFieldValue.trim+"; "+in_FieldValue.Trim, CurrentFieldValue.Trim), in_FieldValue.Trim)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Assign DisplayName="Assign NewValue as TRUE for Foreground" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[NewValue]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[in_FieldValue]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Else>
                      </If>
                      <uga:WriteCell ContinueOnError="{x:Null}" GoogleSpreadsheet="{x:Null}" Request="{x:Null}" AuthScopesInvalid="False" Cell="[ColumnToUpdateLetter+(OriginalRowIndex+2).tostring]" DisplayName="Write Cell Field" sap:VirtualizedContainerService.HintSize="958.4,192.8" sap2010:WorkflowViewState.IdRef="WriteCell_6" IsInsideBatchUpdateScope="False" SheetName="[in_Config(&quot;IncomeTrk_GQueue_SheetName&quot;).ToString]" SpreadsheetId="[in_Config(&quot;IncomeTrk_GLog_SheetID&quot;).ToString]" Value="[NewValue]" />
                      <If Condition="[in_RemoveReadyToProcess]" DisplayName="If in_RemoveReadyToProcess" sap:VirtualizedContainerService.HintSize="958.4,648.8" sap2010:WorkflowViewState.IdRef="If_3">
                        <If.Then>
                          <Sequence DisplayName="RemoveReadyToProcess check" sap:VirtualizedContainerService.HintSize="375.2,460" sap2010:WorkflowViewState.IdRef="Sequence_8">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:GetColumnLetter ColumnLetter="[ColumnToUpdateLetter]" ColumnName="Ready To Process" DataTable="[IncomeTrkDT]" DisplayName="Get ColumnToUpdateLetter" sap:VirtualizedContainerService.HintSize="333.6,134.4" sap2010:WorkflowViewState.IdRef="GetColumnLetter_3" />
                            <uga:WriteCell ContinueOnError="{x:Null}" GoogleSpreadsheet="{x:Null}" Request="{x:Null}" AuthScopesInvalid="False" Cell="[ColumnToUpdateLetter+(OriginalRowIndex+2).tostring]" DisplayName="Write Cell Ready to process" sap:VirtualizedContainerService.HintSize="333.6,192.8" sap2010:WorkflowViewState.IdRef="WriteCell_7" IsInsideBatchUpdateScope="False" SheetName="[in_Config(&quot;IncomeTrk_GQueue_SheetName&quot;).ToString]" SpreadsheetId="[in_Config(&quot;IncomeTrk_GLog_SheetID&quot;).ToString]" Value="FALSE" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="958.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Update finished successfully.&quot;]" />
                    </Sequence>
                  </ActivityAction>
                </uga:GSuiteApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </uga:GSuiteApplicationScope>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1036.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="375.2,248" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Warn" Message="[&quot;GSheet couldn't be updated: &quot;+exception.Message]" />
                    <Rethrow sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean" />
      </ui:RetryScope.Condition>
    </ui:RetryScope>
  </Sequence>
</Activity>